ValueError: namespace must be global. ns: , key: robot_description, 
params: {'roslaunch': {'uris': {'host_ros20__36863': 'http://ros20:36863/'}}, 'rosversion': '1.12.14\n', 'run_id': 'a5c8114c-74d4-11e9-864b-28f10e4001b1', 'gvrbot_velocity_co
ntroller': {'right_wheel': ['front_right_wheel', 'rear_right_wheel'], 'twist_covariance_diagonal': [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03], 'linear': {'x': {'max_ve
locity': 2.0, 'has_acceleration_limits': True, 'has_velocity_limits': True, 'max_acceleration': 20.0}}, 'publish_rate': 50, 'wheel_radius_multiplier': 1.0, 'pose_covariance_d
iagonal': [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03], 'type': 'diff_drive_controller/DiffDriveController', 'k_r': 0.1, 'wheel_separation_multiplier': 1.5, 'enable_
odom_tf': False, 'k_l': 0.1, 'cmd_vel_timeout': 0.25, 'left_wheel': ['front_left_wheel', 'rear_left_wheel'], 'angular': {'z': {'max_velocity': 4.0, 'has_acceleration_limits':
 True, 'has_velocity_limits': True, 'max_acceleration': 25.0}}}, 'twist_mux': {'locks': [{'topic': 'e_stop', 'priority': 255, 'name': 'e_stop', 'timeout': 0.0}], 'topics': [{
'topic': 'joy_teleop/cmd_vel', 'priority': 10, 'name': 'joy', 'timeout': 0.5}, {'topic': 'bluetooth_teleop/cmd_vel', 'priority': 9, 'name': 'bt_joy', 'timeout': 0.5}, {'topic
': 'twist_marker_server/cmd_vel', 'priority': 8, 'name': 'interactive_marker', 'timeout': 0.5}, {'topic': 'cmd_vel', 'priority': 1, 'name': 'external', 'timeout': 0.5}]}, 'ek
f_localization': {'odom_frame': 'odom', 'odom0': '/jackal_velocity_controller/odom', 'odom0_differential': False, 'odom0_config': [False, False, False, False, False, False, T
rue, True, True, False, False, True, False, False, False], 'base_link_frame': 'base_link', 'imu0': '/imu/data', 'frequency': 50, 'imu0_differential': False, 'imu0_config': [F
alse, False, False, True, True, True, False, False, False, True, True, True, False, False, False], 'world_frame': 'odom'}, 'gvrbot_joint_publisher': {'type': 'joint_state_con
troller/JointStateController', 'publish_rate': 50}, 'robot_description': '<?xml version="1.0" ?>\n<!-- =======================================================================
============ -->\n<!-- |    This document was autogenerated by xacro from /home/user1/catkin_ws/src/usma_gvrbot/models/robots/gvrbot.urdf.xacro | -->\n<!-- |    EDITING THIS 
FILE BY HAND IS NOT RECOMMENDED                                 | -->\n<!-- =================================================================================== -->\n<robot na
me="gvrbot" xmlns:interface="http://www.ros.org/wiki/xacro/#interface" xmlns:xacro="http://www.ros.org/wiki/xacro">\n  <material name="army_green">\n    <color rgba="0.164705
882353 0.180392156863 0.0705882352941 1.0"/>\n  </material>\n  <!-- Links and Joints (i.e., the robot) -->\n  <link name="base_footprint"/>\n  <joint name="bf_to_bl" type="fi
xed">\n    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 -0.17"/>\n    <parent link="base_link"/>\n    <child link="base_footprint"/>\n  </joint>\n  <link name="base_link"/>\n  <joi
nt name="base_link_joint" type="fixed">\n    <origin rpy="0 0 0" xyz="0 0 0"/>\n    <parent link="base_link"/>\n    <child link="chassis_link"/>\n  </joint>\n  <link name="im
u_link"/>\n  <joint name="imu_to_bl" type="fixed">\n    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>\n    <parent link="base_link"/>\n    <child link="imu_link"/>\n  </joint
>\n  <link name="chassis_link">\n    <inertial>\n      <mass value="25.0"/>\n      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>\n      <inertia ixx="0.810208333333" ixy="0.7125" i
xz="0.201875" iyy="0.810208333333" iyz="0.159375" izz="0.810208333333"/>\n    </inertial>\n    <!-- compare the two visual pieces until they match up in size then delete the 
mesh -->\n    <visual>\n      <origin rpy="0 0 1.57" xyz="0.33 0.0 -0.17"/>\n      <geometry>\n        <mesh filename="package://gvrbot/models/meshes/gvrbot_base.STL"/>\n    
   </geometry>\n      <material name="army_green"/>\n    </visual>\n    <!--visual>\n                <origin xyz="0.0 0.0 -0.085" rpy="0 0 0" />\n                <geometry>\n 
                   <box size="${base_size_x} ${base_size_y} ${base_size_z}" />\n                </geometry>\n                <Green />\n            </visual-->\n    <collisio
n>\n      <origin rpy="0 0 0" xyz="0.0 0.0 -0.085"/>\n      <geometry>\n        <box size="0.38 0.3 0.085"/>\n      </geometry>\n    </collision>\n  </link>\n  <link name="fr
ont_left_wheel_link">\n    <collision>\n      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.04" radius="0.15"/>\n      </geomet
ry>\n    </collision>\n    <inertial>\n      <origin rpy="0 0 0" xyz="0 0 0"/>\n      <mass value="0.477"/>\n      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" 
izz="0.0013"/>\n    </inertial>\n  </link>\n  <gazebo reference="front_left_wheel_link">\n    <material>Gazebo/DarkGrey</material>\n  </gazebo>\n  <joint name="front_left_wheel" type="continuous">\n    <parent link="chassis_link"/>\n    <child link="front_left_wheel_link"/>\n    <origin rpy="0 0 0" xyz="0.22 0.165 -0.09"/>\n    <axis xyz="0 1 0"/>\n  </joint>\n  <!-- In reality, the robot has only two motors, one per side. However, it\'s more\n         straightforward for Gazebo to simulate as if there\'s an actuator per wheel. -->\n  <transmission name="front_left_wheel_trans">\n    <type>transmission_interface/SimpleTransmission</type>\n    <joint name="front_left_wheel">\n      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>\n    </joint>\n    <actuator name="front_left_actuator">\n      <mechanicalReduction>1</mechanicalReduction>\n    </actuator>\n  </transmission>\n  <link name="front_right_wheel_link">\n    <collision>\n      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.04" radius="0.15"/>\n      </geometry>\n    </collision>\n    <inertial>\n      <origin rpy="0 0 0" xyz="0 0 0"/>\n      <mass value="0.477"/>\n      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>\n    </inertial>\n  </link>\n  <gazebo reference="front_right_wheel_link">\n    <material>Gazebo/DarkGrey</material>\n  </gazebo>\n  <joint name="front_right_wheel" type="continuous">\n    <parent link="chassis_link"/>\n    <child link="front_right_wheel_link"/>\n    <origin rpy="0 0 0" xyz="0.22 -0.165 -0.09"/>\n    <axis xyz="0 1 0"/>\n  </joint>\n  <!-- In reality, the robot has only two motors, one per side. However, it\'s more\n         straightforward for Gazebo to simulate as if there\'s an actuator per wheel. -->\n  <transmission name="front_right_wheel_trans">\n    <type>transmission_interface/SimpleTransmission</type>\n    <joint name="front_right_wheel">\n      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>\n    </joint>\n    <actuator name="front_right_actuator">\n      <mechanicalReduction>1</mechanicalReduction>\n    </actuator>\n  </transmission>\n  <link name="rear_left_wheel_link">\n    <collision>\n      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.04" radius="0.15"/>\n      </geometry>\n    </collision>\n    <inertial>\n      <origin rpy="0 0 0" xyz="0 0 0"/>\n      <mass value="0.477"/>\n      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>\n    </inertial>\n  </link>\n  <gazebo reference="rear_left_wheel_link">\n    <material>Gazebo/DarkGrey</material>\n  </gazebo>\n  <joint name="rear_left_wheel" type="continuous">\n    <parent link="chassis_link"/>\n    <child link="rear_left_wheel_link"/>\n    <origin rpy="0 0 0" xyz="-0.28 0.165 -0.09"/>\n    <axis xyz="0 1 0"/>\n  </joint>\n  <!-- In reality, the robot has only two motors, one per side. However, it\'s more\n         straightforward for Gazebo to simulate as if there\'s an actuator per wheel. -->\n  <transmission name="rear_left_wheel_trans">\n    <type>transmission_interface/SimpleTransmission</type>\n    <joint name="rear_left_wheel">\n      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>\n    </joint>\n    <actuator name="rear_left_actuator">\n      <mechanicalReduction>1</mechanicalReduction>\n    </actuator>\n  </transmission>\n  <link name="rear_right_wheel_link">\n    <collision>\n      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.04" radius="0.15"/>\n      </geometry>\n    </collision>\n    <inertial>\n      <origin rpy="0 0 0" xyz="0 0 0"/>\n      <mass value="0.477"/>\n      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>\n    </inertial>\n  </link>\n  <gazebo reference="rear_right_wheel_link">\n    <material>Gazebo/DarkGrey</material>\n  </gazebo>\n  <joint name="rear_right_wheel" type="continuous">\n    <parent link="chassis_link"/>\n    <child link="rear_right_wheel_link"/>\n    <origin rpy="0 0 0" xyz="-0.28 -0.165 -0.09"/>\n    <axis xyz="0 1 0"/>\n  </joint>\n  <!-- In reality, the robot has only two motors, one per side. However, it\'s more\n         straightforward for Gazebo to simulate as if there\'s an actuator per wheel. -->\n  <transmission name="rear_right_wheel_trans">\n    <type>transmission_interface/SimpleTransmission</type>\n    <joint name="rear_right_wheel">\n      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>\n    </joint>\n    <actuator name="rear_right_actuator">\n      <mechanicalReduction>1</mechanicalReduction>\n    </actuator>\n  </transmission>\n  <gazebo>\n    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">\n      <robotNamespace>/</robotNamespace>\n      <legacyModeNS>true</legacyModeNS>\n    </plugin>\n    <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller">\n      <alwaysOn>true</alwaysOn>\n      <updateRate>50.0</updateRate>\n      <bodyName>base_link</bodyName>\n      <topicName>/gvrbot/ground_truth/state</topicName>\n      <gaussianNoise>0.01</gaussianNoise>\n      <frameName>world</frameName>\n      <xyzOffsets>0 0 0</xyzOffsets>\n      <rpyOffsets>0 0 0</rpyOffsets>\n    </plugin>\n    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">\n      <robotNamespace>/</robotNamespace>\n      <alwaysOn>true</alwaysOn>\n      <updateRate>50.0</updateRate>\n      <bodyName>base_link</bodyName>\n      <topicName>/imu/data</topicName>\n      <accelDrift>0.005 0.005 0.005</accelDrift>\n      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>\n      <rateDrift>0.005 0.005 0.005 </rateDrift>\n      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>\n      <headingDrift>0.005</headingDrift>\n      <headingGaussianNoise>0.005</headingGaussianNoise>\n      <xyzOffset>0 0 0</xyzOffset>\n      <rpyOffset>0 0 0</rpyOffset>\n    </plugin>\n  </gazebo>\n  <!-- \n    <xacro:include filename="$(find gvrbot)/models/robots/frame_8020.urdf.xacro" />    \n    <frame_8020 parent="base_link" offset_x="0.28" offset_y="0.135" offset_z="-0.115"/>\n\n    <xacro:arg name="gpu" default="false"/>\n    <xacro:property name="gpu" value="$(arg gpu)" />   \n    <xacro:include filename="$(find velodyne_description)/urdf/HDL-32E.urdf.xacro"/>\n    <HDL-32E parent="base_link" name="velodyne2" topic="/velodyne_points2" hz="10" samples="220" gpu="${gpu}">\n        <origin xyz="-0.028 -0.006 0.46" rpy="0 0 0" />\n    </HDL-32E>    \n     -->\n</robot>\n\n', 'use_sim_time': True, 'rosdistro': 'kinetic\n'}

