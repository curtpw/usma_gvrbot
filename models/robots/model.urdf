<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from gvrbot.urdf.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="gvrbot" xmlns:interface="http://www.ros.org/wiki/xacro/#interface" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <material name="army_green">
    <color rgba="0.164705882353 0.180392156863 0.0705882352941 1.0"/>
  </material>
  <!-- Links and Joints (i.e., the robot) -->
  <link name="base_footprint"/>
  <joint name="bf_to_bl" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 -0.17"/>
    <parent link="base_link"/>
    <child link="base_footprint"/>
  </joint>
  <link name="base_link"/>
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="chassis_link"/>
  </joint>
  <link name="imu_link"/>
  <joint name="imu_to_bl" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <link name="chassis_link">
    <inertial>
      <mass value="25.0"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <inertia ixx="0.810208333333" ixy="0.7125" ixz="0.201875" iyy="0.810208333333" iyz="0.159375" izz="0.810208333333"/>
    </inertial>
    <!-- compare the two visual pieces until they match up in size then delete the mesh -->
    <visual>
      <origin rpy="0 0 1.57" xyz="0.33 0.0 -0.17"/>
      <geometry>
        <mesh filename="package://gvrbot/models/meshes/gvrbot_base.STL"/>
      </geometry>
      <material name="army_green"/>
    </visual>
    <!--visual>
                <origin xyz="0.0 0.0 -0.085" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
                </geometry>
                <Green />
            </visual-->
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.085"/>
      <geometry>
        <box size="0.38 0.3 0.085"/>
      </geometry>
    </collision>
  </link>
  <link name="front_left_wheel_link">
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="front_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.22 0.165 -0.09"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, the robot has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="front_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="front_right_wheel_link">
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="front_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.22 -0.165 -0.09"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, the robot has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="front_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_left_wheel_link">
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="rear_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.28 0.165 -0.09"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, the robot has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="rear_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_right_wheel_link">
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="rear_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.28 -0.165 -0.09"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, the robot has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="rear_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
    <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>/gvrbot/ground_truth/state</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <robotNamespace>/</robotNamespace>
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>/imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
      <xyzOffset>0 0 0</xyzOffset>
      <rpyOffset>0 0 0</rpyOffset>
    </plugin>
  </gazebo>
  <joint name="frame_8020_joint" type="fixed">
    <origin rpy="0 0 -1.570795" xyz="0.28 0.135 -0.115"/>
    <parent link="base_link"/>
    <child link="frame8020_link"/>
  </joint>
  <link name="frame8020_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://gvrbot/models/meshes/frame_8020.STL"/>
      </geometry>
      <material name="">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://gvrbot/models/meshes/frame_8020.STL"/>
      </geometry>
    </collision>
  </link>
  <!--
    <xacro:arg name="gpu" default="false"/>
    <xacro:property name="gpu" value="$(arg gpu)" />   
    <xacro:include filename="$(find velodyne_description)/urdf/HDL-32E.urdf.xacro"/>
    <HDL-32E parent="base_link" name="velodyne2" topic="/velodyne_points2" hz="10" samples="220" gpu="${gpu}">
        <origin xyz="-0.028 -0.006 0.46" rpy="0 0 0" />
    </HDL-32E>    
  -->
  <link name="front_laser">
    <inertial>
      <mass value="1.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00307156543804" ixy="0.0" ixz="0.0" iyy="0.00312849041527" iyz="0.0" izz="0.00196432421427"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- Origin of this mesh is the focal point of the LIDAR. -->
        <mesh filename="package://lms1xx/meshes/sick-lms1xx.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.05"/>
      <geometry>
        <box size="0.105 0.1 0.1"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_laser">
    <turnGravityOff>true</turnGravityOff>
    <sensor name="front_laser" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>50</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619</min_angle>
            <max_angle>2.35619</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser">
        <topicName>/front/scan</topicName>
        <frameName>front_laser</frameName>
        <robotNamespace>/</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="front_laser_joint" type="fixed">
    <!-- This offset is from the base of the bracket to the LIDAR's focal point. -->
    <origin rpy="0 0 0" xyz="-0.028 -0.006 0.56"/>
    <parent link="base_link"/>
    <child link="front_laser"/>
  </joint>
</robot>
